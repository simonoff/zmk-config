/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        // Customized mod_tap and layer_tap:
        // - Enables quick_tap. Useful for backspace/space.
        // - Switch to balanced flavor to allow for fast (back)space + character rollovers.
        mt_: custom_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
                        quick_tap_ms = <500>;
            bindings = <&kp>, <&kp>;
        };
        lt_: custom_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
                        quick_tap_ms = <500>;
            bindings = <&mo>, <&kp>;
        };

        custom0: custom0 {
            compatible = "zmk,behavior-mod-morph";
            label = "Generated Behavior custom0";
            #binding-cells = <0>;
            bindings = <&kp LS(8)>, <&kp MINUS>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
    
        custom1: custom1 {
            compatible = "zmk,behavior-mod-morph";
            label = "Generated Behavior custom1";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SQT>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
    
        custom2: custom2 {
            compatible = "zmk,behavior-mod-morph";
            label = "Generated Behavior custom2";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp LS(SQT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
    
        custom3: custom3 {
            compatible = "zmk,behavior-mod-morph";
            label = "Generated Behavior custom3";
            #binding-cells = <0>;
            bindings = <&kp LS(1)>, <&kp LS(FSLH)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
    
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&trans &kp Q &kp W &kp F &kp P &kp G &kp Y &kp U &kp I &kp O &custom0 &trans
&trans &kp A &kp R &kp S &kp T &kp D &kp H &kp N &kp E &kp I &kp O &trans
&trans &kp Z &kp X &kp C &kp V &kp B &kp K &kp M &custom1 &custom2 &custom3 &trans
&mt_ LALT ESC &mt_ LSHFT TAB &mt_ LGUI RET &mo 1 &lt_ 2 SPC &mt_ LCTRL BKSP                  
                        >;
                };

                lower_layer {
                        bindings = <
&trans &trans &kp N7 &kp N8 &kp N9 &trans &trans &kp LA(LEFT) &kp UP &kp LA(RIGHT) &trans &trans
&trans &trans &kp N4 &kp N5 &kp N6 &trans &kp HOME &kp LEFT &kp DOWN &kp RIGHT &kp END &trans
&trans &kp N0 &kp N1 &kp N2 &kp N3 &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &mo 3 &trans &trans
                        >;
                };

                raise_layer {
                        bindings = <
&trans &trans &trans &kp LS(2) &kp LS(4) &kp LS(5) &kp LS(MINUS) &kp LS(7) &kp LS(6) &trans &trans &trans
&trans &trans &kp LS(COMMA) &kp LBKT &kp LS(9) &kp LS(LBKT) &kp LS(SEMI) &kp SEMI &kp EQUAL &kp LS(EQUAL) &trans &trans
&trans &trans &kp LS(DOT) &kp RBKT &kp LS(0) &kp LS(RBKT) &kp BSLH &kp BSLH &trans &kp FSLH &kp LS(3) &trans
&trans &trans &trans &trans &mo 3 &trans
                        >;
                };
                
                adjust_layer {
                      bindings = <
&trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans
                     >;
              };
        };
};
